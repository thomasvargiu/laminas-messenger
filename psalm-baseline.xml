<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="6.0.0@b8e96bb617bf59382113b1b56cef751f648a7dc9">
  <file src="src/Bridge/Doctrine/Factory/Middleware/AbstractDoctrineMiddlewareFactory.php">
    <InvalidArrayOffset>
      <code><![CDATA[$this->getConfig($container)['doctrine']]]></code>
    </InvalidArrayOffset>
    <MixedArgument>
      <code><![CDATA[$data['name'] ?? null]]></code>
    </MixedArgument>
    <UnsafeInstantiation>
      <code><![CDATA[new static($data['name'] ?? null)]]></code>
      <code><![CDATA[new static($name)]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Bridge/Doctrine/Factory/Middleware/DoctrineOpenTransactionLoggerMiddlewareFactory.php">
    <MixedArgument>
      <code><![CDATA[$logger && $container->has($logger) ? $container->get($logger) : null]]></code>
    </MixedArgument>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$logger]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Bridge/Doctrine/Middleware/AbstractDoctrineMiddleware.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$connection]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Bridge/Doctrine/Middleware/DoctrineClearEntityManagerWorkerSubscriber.php">
    <ImplementedReturnTypeMismatch>
      <code><![CDATA[iterable<string, string>]]></code>
    </ImplementedReturnTypeMismatch>
  </file>
  <file src="src/Bridge/Doctrine/Middleware/DoctrineCloseConnectionMiddleware.php">
    <PossiblyUndefinedVariable>
      <code><![CDATA[$connection]]></code>
    </PossiblyUndefinedVariable>
  </file>
  <file src="src/Factory/Command/ConsumeMessagesCommandFactory.php">
    <MixedArgument>
      <code><![CDATA[$container->get($eventDispatcher)]]></code>
      <code><![CDATA[$container->get('messenger.receivers_locator')]]></code>
      <code><![CDATA[$eventDispatcher]]></code>
      <code><![CDATA[$logger]]></code>
      <code><![CDATA[$logger && $container->has($logger) ? $container->get($logger) : null]]></code>
      <code><![CDATA[$transports]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$config['messenger']]]></code>
      <code><![CDATA[$config['messenger']]]></code>
      <code><![CDATA[$config['messenger']]]></code>
      <code><![CDATA[$config['messenger']['event_dispatcher']]]></code>
      <code><![CDATA[$config['messenger']['logger']]]></code>
      <code><![CDATA[$config['messenger']['transports']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$config]]></code>
      <code><![CDATA[$eventDispatcher]]></code>
      <code><![CDATA[$logger]]></code>
      <code><![CDATA[$transports]]></code>
    </MixedAssignment>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$logger]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Factory/Command/FailedMessagesRemoveCommandFactory.php">
    <InternalMethod>
      <code><![CDATA[new FailedMessagesRemoveCommand(
            $failureTransportName,
            new ServiceProvider([
                $failureTransportName => static function () use ($receiverLocator, $failureTransportName) { return $receiverLocator->get($failureTransportName); },
            ]),
        )]]></code>
    </InternalMethod>
    <MissingClosureReturnType>
      <code><![CDATA[static function () use ($receiverLocator, $failureTransportName) { return $receiverLocator->get($failureTransportName); }]]></code>
    </MissingClosureReturnType>
  </file>
  <file src="src/Factory/Command/FailedMessagesRetryCommandFactory.php">
    <MissingClosureReturnType>
      <code><![CDATA[static function () use ($receiverLocator, $failureTransportName) { return $receiverLocator->get($failureTransportName); }]]></code>
    </MissingClosureReturnType>
    <MixedArgument>
      <code><![CDATA[$container->get($eventDispatcher)]]></code>
      <code><![CDATA[$eventDispatcher]]></code>
      <code><![CDATA[$logger && $container->has($logger) ? $container->get($logger) : null]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$config['messenger']]]></code>
      <code><![CDATA[$config['messenger']]]></code>
      <code><![CDATA[$config['messenger']]]></code>
      <code><![CDATA[$config['messenger']['event_dispatcher']]]></code>
      <code><![CDATA[$config['messenger']['failure_transport']]]></code>
      <code><![CDATA[$config['messenger']['logger']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$config]]></code>
      <code><![CDATA[$eventDispatcher]]></code>
    </MixedAssignment>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$logger]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Factory/Command/FailedMessagesShowCommandFactory.php">
    <InternalMethod>
      <code><![CDATA[new FailedMessagesShowCommand(
            $failureTransportName,
            new ServiceProvider([
                $failureTransportName => static function () use ($receiverLocator, $failureTransportName) { return $receiverLocator->get($failureTransportName); },
            ]),
        )]]></code>
    </InternalMethod>
    <MissingClosureReturnType>
      <code><![CDATA[static function () use ($receiverLocator, $failureTransportName) { return $receiverLocator->get($failureTransportName); }]]></code>
    </MissingClosureReturnType>
    <MixedArgument>
      <code><![CDATA[$failureTransportName]]></code>
      <code><![CDATA[$failureTransportName]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[[
                $failureTransportName => static function () use ($receiverLocator, $failureTransportName) { return $receiverLocator->get($failureTransportName); },
            ]]]></code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code><![CDATA[$config['messenger']]]></code>
      <code><![CDATA[$config['messenger']['failure_transport']]]></code>
    </MixedArrayAccess>
    <MixedArrayOffset>
      <code><![CDATA[[
                $failureTransportName => static function () use ($receiverLocator, $failureTransportName) { return $receiverLocator->get($failureTransportName); },
            ]]]></code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code><![CDATA[$config]]></code>
      <code><![CDATA[$failureTransportName]]></code>
    </MixedAssignment>
  </file>
  <file src="src/Factory/Command/SetupTransportsCommandFactory.php">
    <MixedArgument>
      <code><![CDATA[$config['messenger']['transports'] ?? []]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$config['messenger']]]></code>
      <code><![CDATA[$config['messenger']['transports']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$config]]></code>
    </MixedAssignment>
  </file>
  <file src="src/Factory/EventDispatcherFactory.php">
    <MixedArgument>
      <code><![CDATA[$config['messenger']['subscribers'] ?? []]]></code>
      <code><![CDATA[array_map([$container, 'get'], $subscribers)]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$cachePoolForRestartSignal]]></code>
      <code><![CDATA[$failureTransport]]></code>
    </MixedAssignment>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$cachePoolForRestartSignal]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Factory/Listener/SendFailedMessageForRetryListenerFactory.php">
    <MixedArgument>
      <code><![CDATA[$container->get('messenger.retry_strategy_locator')]]></code>
      <code><![CDATA[$logger && $container->has($logger) ? $container->get($logger) : null]]></code>
    </MixedArgument>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$logger]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Factory/Listener/SendFailedMessageToFailureTransportListenerFactory.php">
    <MixedArgument>
      <code><![CDATA[$container->get($failureTransportName)]]></code>
      <code><![CDATA[$logger && $container->has($logger) ? $container->get($logger) : null]]></code>
    </MixedArgument>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$logger]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Factory/Listener/StopWorkerOnRestartSignalListenerFactory.php">
    <MixedArgument>
      <code><![CDATA[$cachePoolForRestartSignal]]></code>
      <code><![CDATA[$container->get($cachePoolForRestartSignal)]]></code>
      <code><![CDATA[$logger && $container->has($logger) ? $container->get($logger) : null]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$cachePoolForRestartSignal]]></code>
    </MixedAssignment>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[! $cachePoolForRestartSignal]]></code>
      <code><![CDATA[$logger]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Factory/Middleware/AbstractDoctrineMiddlewareFactory.php">
    <UnusedClass>
      <code><![CDATA[AbstractDoctrineMiddlewareFactory]]></code>
    </UnusedClass>
  </file>
  <file src="src/Factory/Middleware/AddBusNameStampMiddlewareFactory.php">
    <MixedArgument>
      <code><![CDATA[$data['busName'] ?? null]]></code>
    </MixedArgument>
    <PossiblyNullArgument>
      <code><![CDATA[$data['busName'] ?? null]]></code>
    </PossiblyNullArgument>
    <UnusedParam>
      <code><![CDATA[$container]]></code>
    </UnusedParam>
  </file>
  <file src="src/Factory/Middleware/DoctrineClearEntityManagerMiddlewareFactory.php">
    <InvalidExtendClass>
      <code><![CDATA[\TMV\Laminas\Messenger\Bridge\Doctrine\Factory\Middleware\DoctrineClearEntityManagerMiddlewareFactory]]></code>
    </InvalidExtendClass>
    <UnusedClass>
      <code><![CDATA[DoctrineClearEntityManagerMiddlewareFactory]]></code>
    </UnusedClass>
  </file>
  <file src="src/Factory/Middleware/DoctrineCloseConnectionMiddlewareFactory.php">
    <InvalidExtendClass>
      <code><![CDATA[\TMV\Laminas\Messenger\Bridge\Doctrine\Factory\Middleware\DoctrineCloseConnectionMiddlewareFactory]]></code>
    </InvalidExtendClass>
    <UnusedClass>
      <code><![CDATA[DoctrineCloseConnectionMiddlewareFactory]]></code>
    </UnusedClass>
  </file>
  <file src="src/Factory/Middleware/DoctrinePingConnectionMiddlewareFactory.php">
    <InvalidExtendClass>
      <code><![CDATA[\TMV\Laminas\Messenger\Bridge\Doctrine\Factory\Middleware\DoctrinePingConnectionMiddlewareFactory]]></code>
    </InvalidExtendClass>
    <UnusedClass>
      <code><![CDATA[DoctrinePingConnectionMiddlewareFactory]]></code>
    </UnusedClass>
  </file>
  <file src="src/Factory/Middleware/DoctrineTransactionMiddlewareFactory.php">
    <InvalidExtendClass>
      <code><![CDATA[\TMV\Laminas\Messenger\Bridge\Doctrine\Factory\Middleware\DoctrineTransactionMiddlewareFactory]]></code>
    </InvalidExtendClass>
    <UnusedClass>
      <code><![CDATA[DoctrineTransactionMiddlewareFactory]]></code>
    </UnusedClass>
  </file>
  <file src="src/Factory/Middleware/HandleMessageMiddlewareFactory.php">
    <MixedArgument>
      <code><![CDATA[$container->get($logger)]]></code>
      <code><![CDATA[$data['busName'] ?? null]]></code>
    </MixedArgument>
    <PossiblyNullArgument>
      <code><![CDATA[$data['busName'] ?? null]]></code>
    </PossiblyNullArgument>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$logger]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Factory/Middleware/SendMessageMiddlewareFactory.php">
    <MixedArgument>
      <code><![CDATA[$container->get($logger)]]></code>
      <code><![CDATA[$data['busName'] ?? null]]></code>
      <code><![CDATA[$eventDispatcher ? $container->get($eventDispatcher) : null]]></code>
    </MixedArgument>
    <PossiblyNullArgument>
      <code><![CDATA[$data['busName'] ?? null]]></code>
    </PossiblyNullArgument>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$eventDispatcher]]></code>
      <code><![CDATA[$logger]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Factory/Retry/RetryStrategyFactory.php">
    <MixedReturnStatement>
      <code><![CDATA[$container->get($retryConfig)]]></code>
    </MixedReturnStatement>
  </file>
  <file src="src/Factory/Retry/RetryStrategyLocatorFactory.php">
    <MixedArgument>
      <code><![CDATA[$name]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[['factories' => $factories]]]></code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code><![CDATA[$config['messenger']]]></code>
      <code><![CDATA[$config['messenger']['transports']]]></code>
    </MixedArrayAccess>
    <MixedArrayOffset>
      <code><![CDATA[$factories[$name]]]></code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code><![CDATA[$config]]></code>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$transports]]></code>
    </MixedAssignment>
  </file>
  <file src="src/Factory/Transport/Receiver/ReceiversLocatorFactory.php">
    <InvalidArrayOffset>
      <code><![CDATA[$factories[$name]]]></code>
    </InvalidArrayOffset>
    <MixedArgument>
      <code><![CDATA[$config['messenger']['transports'] ?? []]]></code>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$serviceName]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$factories]]></code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code><![CDATA[$config['messenger']]]></code>
      <code><![CDATA[$config['messenger']]]></code>
      <code><![CDATA[$config['messenger']['receivers']]]></code>
      <code><![CDATA[$config['messenger']['transports']]]></code>
    </MixedArrayAccess>
    <MixedArrayOffset>
      <code><![CDATA[$factories[$name]]]></code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code><![CDATA[$config]]></code>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$receivers]]></code>
      <code><![CDATA[$serviceName]]></code>
    </MixedAssignment>
    <MixedReturnStatement>
      <code><![CDATA[$container->get($name)]]></code>
      <code><![CDATA[$container->get($serviceName)]]></code>
    </MixedReturnStatement>
    <NoValue>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$name]]></code>
    </NoValue>
    <UnusedForeachValue>
      <code><![CDATA[$name]]></code>
    </UnusedForeachValue>
  </file>
  <file src="src/Factory/Transport/Sender/SendersLocatorFactory.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$routing]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Factory/Transport/Sync/SyncTransportFactoryFactory.php">
    <MixedArgument>
      <code><![CDATA[$container->get('messenger.routable_message_bus')]]></code>
    </MixedArgument>
  </file>
  <file src="src/Factory/Transport/TransportFactory.php">
    <MixedArgument>
      <code><![CDATA[$serializerName]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$dsn]]></code>
      <code><![CDATA[$options]]></code>
      <code><![CDATA[$serializerName]]></code>
      <code><![CDATA[$serializerName]]></code>
      <code><![CDATA[$transportConfig]]></code>
      <code><![CDATA[$transportFactory]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[createTransport]]></code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[$transportFactory->createTransport($dsn, $options, $serializer)]]></code>
    </MixedReturnStatement>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$serializerName]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Factory/Transport/TransportProviderFactory.php">
    <InvalidArgument>
      <code><![CDATA[new ServiceManager(['factories' => $factories])]]></code>
    </InvalidArgument>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(string) $name]]></code>
      <code><![CDATA[(string) $name]]></code>
    </RedundantCastGivenDocblockType>
    <TooManyArguments>
      <code><![CDATA[new ServiceProvider(new ServiceManager(['factories' => $factories]), $factories)]]></code>
    </TooManyArguments>
  </file>
  <file src="src/Handler/ContainerHandlersLocator.php">
    <InvalidDocblock>
      <code><![CDATA[private $handlers;]]></code>
    </InvalidDocblock>
    <MixedArgument>
      <code><![CDATA[$this->container->get($handlerDescriptor)]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$expectedTransport]]></code>
    </MixedAssignment>
    <PossiblyFalseOperand>
      <code><![CDATA[class_implements($class)]]></code>
      <code><![CDATA[class_parents($class)]]></code>
    </PossiblyFalseOperand>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_string($handlerDescriptor)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Middleware/AbstractDoctrineMiddleware.php">
    <UnusedClass>
      <code><![CDATA[AbstractDoctrineMiddleware]]></code>
    </UnusedClass>
  </file>
  <file src="src/Middleware/DoctrineClearEntityManagerMiddleware.php">
    <InvalidExtendClass>
      <code><![CDATA[\TMV\Laminas\Messenger\Bridge\Doctrine\Middleware\DoctrineClearEntityManagerMiddleware]]></code>
    </InvalidExtendClass>
    <UnusedClass>
      <code><![CDATA[DoctrineClearEntityManagerMiddleware]]></code>
    </UnusedClass>
  </file>
  <file src="src/Middleware/DoctrineCloseConnectionMiddleware.php">
    <InvalidExtendClass>
      <code><![CDATA[\TMV\Laminas\Messenger\Bridge\Doctrine\Middleware\DoctrineCloseConnectionMiddleware]]></code>
    </InvalidExtendClass>
    <UnusedClass>
      <code><![CDATA[DoctrineCloseConnectionMiddleware]]></code>
    </UnusedClass>
  </file>
  <file src="src/Middleware/DoctrinePingConnectionMiddleware.php">
    <InvalidExtendClass>
      <code><![CDATA[\TMV\Laminas\Messenger\Bridge\Doctrine\Middleware\DoctrinePingConnectionMiddleware]]></code>
    </InvalidExtendClass>
    <UnusedClass>
      <code><![CDATA[DoctrinePingConnectionMiddleware]]></code>
    </UnusedClass>
  </file>
  <file src="src/Middleware/DoctrineTransactionMiddleware.php">
    <InvalidExtendClass>
      <code><![CDATA[\TMV\Laminas\Messenger\Bridge\Doctrine\Middleware\DoctrineTransactionMiddleware]]></code>
    </InvalidExtendClass>
    <UnusedClass>
      <code><![CDATA[DoctrineTransactionMiddleware]]></code>
    </UnusedClass>
  </file>
  <file src="src/ServiceProvider.php">
    <MixedReturnStatement>
      <code><![CDATA[$this->providedServices]]></code>
    </MixedReturnStatement>
    <UndefinedThisPropertyFetch>
      <code><![CDATA[$this->providedServices]]></code>
    </UndefinedThisPropertyFetch>
  </file>
</files>
